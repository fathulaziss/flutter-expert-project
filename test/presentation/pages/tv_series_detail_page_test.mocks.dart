// Mocks generated by Mockito 5.4.4 from annotations
// in ditonton/test/presentation/pages/tv_series_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;
import 'dart:ui' as _i15;

import 'package:ditonton/common/state_enum.dart' as _i10;
import 'package:ditonton/domain/entities/episode.dart' as _i12;
import 'package:ditonton/domain/entities/tv_series.dart' as _i11;
import 'package:ditonton/domain/entities/tv_series_detail.dart' as _i8;
import 'package:ditonton/domain/usecases/get_tv_series_detail.dart' as _i2;
import 'package:ditonton/domain/usecases/get_tv_series_episodes.dart' as _i4;
import 'package:ditonton/domain/usecases/get_tv_series_recommendations.dart'
    as _i3;
import 'package:ditonton/domain/usecases/get_watchlist_tv_series_status.dart'
    as _i5;
import 'package:ditonton/domain/usecases/remove_watchlist_tv_series.dart'
    as _i7;
import 'package:ditonton/domain/usecases/save_watchlist_tv_series.dart' as _i6;
import 'package:ditonton/presentation/provider/tv_series_detail_notifier.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTvSeriesDetail_0 extends _i1.SmartFake
    implements _i2.GetTvSeriesDetail {
  _FakeGetTvSeriesDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvSeriesRecommendations_1 extends _i1.SmartFake
    implements _i3.GetTvSeriesRecommendations {
  _FakeGetTvSeriesRecommendations_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvSeriesEpisodes_2 extends _i1.SmartFake
    implements _i4.GetTvSeriesEpisodes {
  _FakeGetTvSeriesEpisodes_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListTvSeriesStatus_3 extends _i1.SmartFake
    implements _i5.GetWatchListTvSeriesStatus {
  _FakeGetWatchListTvSeriesStatus_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTvSeries_4 extends _i1.SmartFake
    implements _i6.SaveWatchlistTvSeries {
  _FakeSaveWatchlistTvSeries_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTvSeries_5 extends _i1.SmartFake
    implements _i7.RemoveWatchlistTvSeries {
  _FakeRemoveWatchlistTvSeries_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvSeriesDetail_6 extends _i1.SmartFake
    implements _i8.TvSeriesDetail {
  _FakeTvSeriesDetail_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvSeriesDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesDetailNotifier extends _i1.Mock
    implements _i9.TvSeriesDetailNotifier {
  MockTvSeriesDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvSeriesDetail get getTvSeriesDetail => (super.noSuchMethod(
        Invocation.getter(#getTvSeriesDetail),
        returnValue: _FakeGetTvSeriesDetail_0(
          this,
          Invocation.getter(#getTvSeriesDetail),
        ),
      ) as _i2.GetTvSeriesDetail);

  @override
  _i3.GetTvSeriesRecommendations get getTvSeriesRecommendations =>
      (super.noSuchMethod(
        Invocation.getter(#getTvSeriesRecommendations),
        returnValue: _FakeGetTvSeriesRecommendations_1(
          this,
          Invocation.getter(#getTvSeriesRecommendations),
        ),
      ) as _i3.GetTvSeriesRecommendations);

  @override
  _i4.GetTvSeriesEpisodes get getTvSeriesEpisodes => (super.noSuchMethod(
        Invocation.getter(#getTvSeriesEpisodes),
        returnValue: _FakeGetTvSeriesEpisodes_2(
          this,
          Invocation.getter(#getTvSeriesEpisodes),
        ),
      ) as _i4.GetTvSeriesEpisodes);

  @override
  _i5.GetWatchListTvSeriesStatus get getWatchListTvSeriesStatus =>
      (super.noSuchMethod(
        Invocation.getter(#getWatchListTvSeriesStatus),
        returnValue: _FakeGetWatchListTvSeriesStatus_3(
          this,
          Invocation.getter(#getWatchListTvSeriesStatus),
        ),
      ) as _i5.GetWatchListTvSeriesStatus);

  @override
  _i6.SaveWatchlistTvSeries get saveWatchlistTvSeries => (super.noSuchMethod(
        Invocation.getter(#saveWatchlistTvSeries),
        returnValue: _FakeSaveWatchlistTvSeries_4(
          this,
          Invocation.getter(#saveWatchlistTvSeries),
        ),
      ) as _i6.SaveWatchlistTvSeries);

  @override
  _i7.RemoveWatchlistTvSeries get removeWatchlistTvSeries =>
      (super.noSuchMethod(
        Invocation.getter(#removeWatchlistTvSeries),
        returnValue: _FakeRemoveWatchlistTvSeries_5(
          this,
          Invocation.getter(#removeWatchlistTvSeries),
        ),
      ) as _i7.RemoveWatchlistTvSeries);

  @override
  _i8.TvSeriesDetail get tvSeriesDetail => (super.noSuchMethod(
        Invocation.getter(#tvSeriesDetail),
        returnValue: _FakeTvSeriesDetail_6(
          this,
          Invocation.getter(#tvSeriesDetail),
        ),
      ) as _i8.TvSeriesDetail);

  @override
  _i10.RequestState get tvSeriesDetailState => (super.noSuchMethod(
        Invocation.getter(#tvSeriesDetailState),
        returnValue: _i10.RequestState.Empty,
      ) as _i10.RequestState);

  @override
  List<_i11.TvSeries> get tvSeriesRecommendations => (super.noSuchMethod(
        Invocation.getter(#tvSeriesRecommendations),
        returnValue: <_i11.TvSeries>[],
      ) as List<_i11.TvSeries>);

  @override
  _i10.RequestState get recommendationTvSeriesState => (super.noSuchMethod(
        Invocation.getter(#recommendationTvSeriesState),
        returnValue: _i10.RequestState.Empty,
      ) as _i10.RequestState);

  @override
  List<_i12.Episode> get tvSeriesEpisodes => (super.noSuchMethod(
        Invocation.getter(#tvSeriesEpisodes),
        returnValue: <_i12.Episode>[],
      ) as List<_i12.Episode>);

  @override
  _i10.RequestState get tvSeriesEpisodeState => (super.noSuchMethod(
        Invocation.getter(#tvSeriesEpisodeState),
        returnValue: _i10.RequestState.Empty,
      ) as _i10.RequestState);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
      ) as String);

  @override
  bool get isAddedToWatchlistTvSeries => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlistTvSeries),
        returnValue: false,
      ) as bool);

  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#watchlistMessage),
        ),
      ) as String);

  @override
  String get tvSeriesEpisodeMessage => (super.noSuchMethod(
        Invocation.getter(#tvSeriesEpisodeMessage),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#tvSeriesEpisodeMessage),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i14.Future<void> fetchTvSeriesDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTvSeriesDetail,
          [id],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> addWatchlistTvSeries(_i8.TvSeriesDetail? tvSeriesDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWatchlistTvSeries,
          [tvSeriesDetail],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> removeFromWatchlistTvSeries(
          _i8.TvSeriesDetail? tvSeriesDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlistTvSeries,
          [tvSeriesDetail],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> loadWatchlistTvSeriesStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistTvSeriesStatus,
          [id],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> fetchTvSeriesEpisodes(
    int? id,
    int? season,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTvSeriesEpisodes,
          [
            id,
            season,
          ],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  void addListener(_i15.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i15.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
